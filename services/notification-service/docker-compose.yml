version: '3.8'

services:
  notification-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "3008:3008"
    environment:
      - NODE_ENV=development
      - PORT=3008
      - HOST=0.0.0.0
      - JWT_SECRET=dev-secret-key-change-in-production
      - REDIS_URL=redis://redis:6379
      - EMAIL_PROVIDER=smtp
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
      - SMTP_SECURE=false
      - EMAIL_FROM_ADDRESS=noreply@threatmodel.app
      - EMAIL_FROM_NAME=Threat Modeling App
      - LOG_LEVEL=debug
      - LOG_PRETTY=true
    volumes:
      - .:/app
      - /app/node_modules
      - ./templates:/app/templates
    depends_on:
      - redis
      - mailhog
    networks:
      - notification-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - notification-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - notification-network
    restart: unless-stopped

  # Optional: Redis Commander for debugging
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - notification-network
    restart: unless-stopped

volumes:
  redis_data:

networks:
  notification-network:
    driver: bridge